name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  BUILD_VIDEOS: true
  NOKOGIRI_USE_SYSTEM_LIBRARIES: true  # for faster htmlproofer install

jobs:
  vale-runner:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Vale Linter
        uses: errata-ai/vale-action@reviewdog
        env:
          # Required, set by GitHub actions automatically:
          # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: docs/
          vale_flags: "--config=vale/vale.ini"
          reporter: github-pr-check
          fail_on_error: true
          filter_mode: file
          version: 3.4.2


      - name: Vale Guide Linter
        uses: errata-ai/vale-action@reviewdog
        env:
          # Required, set by GitHub actions automatically:
          # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#about-the-github_token-secret
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: docs/guide/
          vale_flags: "--config=vale/guide.ini"
          reporter: github-pr-check
          fail_on_error: true
          filter_mode: file
          version: 3.4.2


  yaml-validate:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U yamale ruamel.yaml

    - name: Validate YAML
      run: docs/_scripts/validate-yaml.sh

  spellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: codespell-project/codespell-problem-matcher@v1
      - uses: codespell-project/actions-codespell@v1
        name: Check spelling
        with:
          skip: "*.pdf,*.svg,*.js,*.map,*.css,*.scss,docs/_data/201[5|6|7]*,docs/_static_html/*"
          ignore_words_file: "codespell/ignore.txt"
          path: docs

  sphinx:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Cache python env
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: v2-${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install -r requirements.txt

    - name: Build docs
      uses: rickstaa/sphinx-action@master
      with:
        docs-folder: "./docs"
        build-command: "sphinx-build -q -W -b dirhtml -d _build/doctrees . _build/html"

    # Upload performance is awful on the many small files our build generates,
    # so it's compressed locally before uploading
    - name: Compress site
      run: tar -czf html.tar.gz docs/_build/html

    - name: Archive site HTML
      uses: actions/upload-artifact@v2
      with:
        name: html
        path: html.tar.gz


  links-internal:
    runs-on: ubuntu-latest
    needs: sphinx

    steps:
      - name: Download site HTML
        uses: actions/download-artifact@v2
        with:
          name: html

      - name: Uncompress site
        run: tar -xzf html.tar.gz

      - name: Install html-proofer
        run: sudo gem install html-proofer -v '<4.4'

      - name: Check links
        run: |
          htmlproofer --ignore-files "/404/,/2013/,/2014/,/2015/,/2016/,/2017/,/search\/index.html/" --allow-hash-href=true --enforce-https=false --ignore-missing-alt=true --disable-external=true docs/_build/html
